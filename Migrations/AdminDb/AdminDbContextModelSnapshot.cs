// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Courier_Service_part_1.Migrations.AdminDb
{
    [DbContext(typeof(AdminDbContext))]
    partial class AdminDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Courier_Service_part_1.Model.D_m_class", b =>
                {
                    b.Property<string>("d_m_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("d_m_admin_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("d_m_status_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("delivery_location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("order_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("d_m_id");

                    b.ToTable("delivery_Man_table");
                });

            modelBuilder.Entity("Courier_Service_part_1.Model.OrderClass", b =>
                {
                    b.Property<int>("order_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_Id"));

                    b.Property<string>("delivery_man_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("order_TrackOrder_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("order_date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("order_price")
                        .HasColumnType("float");

                    b.Property<string>("order_statuss")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("order_track_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("order_wigth")
                        .HasColumnType("float");

                    b.Property<string>("product_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("order_Id");

                    b.HasIndex("delivery_man_id");

                    b.HasIndex("order_TrackOrder_Id");

                    b.ToTable("OrderClass");
                });

            modelBuilder.Entity("Courier_Service_part_1.Model.Order_track_Class", b =>
                {
                    b.Property<string>("Order_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("reciver_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reciver_id1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("sender_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sender_id1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Order_Id");

                    b.HasIndex("reciver_id1");

                    b.HasIndex("sender_id1");

                    b.ToTable("Order_track_Class");
                });

            modelBuilder.Entity("Courier_Service_part_1.Model.ReciverClass", b =>
                {
                    b.Property<string>("reciver_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("personType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unique_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("unique_phone")
                        .HasColumnType("int");

                    b.Property<string>("zip_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("reciver_id");

                    b.ToTable("ReciverClass");
                });

            modelBuilder.Entity("Courier_Service_part_1.Model.SenderClass", b =>
                {
                    b.Property<string>("sender_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("personType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unique_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("unique_phone")
                        .HasColumnType("int");

                    b.Property<string>("zip_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sender_id");

                    b.ToTable("SenderClass");
                });

            modelBuilder.Entity("Courier_Service_part_1.Model.OrderClass", b =>
                {
                    b.HasOne("Courier_Service_part_1.Model.D_m_class", "D_M_Class")
                        .WithMany("order_class")
                        .HasForeignKey("delivery_man_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Courier_Service_part_1.Model.Order_track_Class", "order_Track")
                        .WithMany()
                        .HasForeignKey("order_TrackOrder_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("D_M_Class");

                    b.Navigation("order_Track");
                });

            modelBuilder.Entity("Courier_Service_part_1.Model.Order_track_Class", b =>
                {
                    b.HasOne("Courier_Service_part_1.Model.ReciverClass", "reciver")
                        .WithMany()
                        .HasForeignKey("reciver_id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Courier_Service_part_1.Model.SenderClass", "sender")
                        .WithMany()
                        .HasForeignKey("sender_id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("reciver");

                    b.Navigation("sender");
                });

            modelBuilder.Entity("Courier_Service_part_1.Model.D_m_class", b =>
                {
                    b.Navigation("order_class");
                });
#pragma warning restore 612, 618
        }
    }
}
